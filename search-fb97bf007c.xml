<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Array.from]]></title>
    <url>%2F2018%2F09%2F07%2FArray.from%2F</url>
    <content type="text"><![CDATA[from属性介绍前沿Array.from()方法就是将一个类数组对象或者可遍历对象转换成一个真正的数组。那么什么是类数组对象呢？所谓类数组对象，最基本的要求就是具有length属性的对象。 例子对象转数组：点击跳转至demo字符串转数组：点击跳转至demo 扩展结合Array.from 进行去重 1Array.from(new set([1, 2, 1, 3])); 数组去重：点击跳转至demo 总结由此可见，要将一个类数组对象转换为一个真正的数组，必须具备以下条件： 该类数组对象必须具有length属性，用于指定数组的长度。如果没有length属性，那么转换后的数组是一个空数组。 该类数组对象的属性名必须为数值型或字符串型的数字 ps: 该类数组对象的属性名可以加引号，也可以不加引号]]></content>
      <categories>
        <category>JS相关</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[clip属性]]></title>
    <url>%2F2018%2F09%2F07%2Fclip%E5%B1%9E%E6%80%A7%2F</url>
    <content type="text"><![CDATA[clip属性介绍前沿 CSS中有一个属性叫做clip，为修剪，剪裁之意。配合其属性关键字rect可以实现元素的矩形裁剪效果。此属性安安稳稳地存在于CSS2.1中，且使用上基本上没有类似于max-height/display:table-cell等浏览器的兼容性问题。但是此属性实际应用较少。大概由以下三个原因导致的： 首先是理解上有些门槛 使用率低 此属性功能效果有不少替代方案 clip属性介绍根据Dreamweaver的自动提示，clip有如下可用属性关键字： auto: 即不剪切之意 inherit：据说IE浏览器是不支持的 rect(top right bottom left)：分别指最终剪裁可见区域的上边，右边，下边与左边，而所有的数值都表示位置，且是相对于原始元素的左上角而言的。最后有必要说明下：clip:rect矩形剪裁只能作用于position:absolute的元素上。点击跳转至demo 兼容性相同与不同相同点 rem与em皆由font-size来决定的。 不同点 rem是根据html跟元素的font-size为基数确定的，字体大小可能首先来自浏览器设置（16px）；em是根据使用em单位的元素的字体大小决定的（注：由于字体具有继承性，所以有时会被误认为父元素font-size来决定的，实际不然）； 总结 rem 单位翻译为像素值是由 html 元素的字体大小决定的。 此字体大小会被浏览器中字体大小的设置影响，除非显式重写一个具体单位。 em 单位转为像素值，取决于他们使用的字体大小。 此字体大小受从父元素继承过来的字体大小，除非显式重写与一个具体单位。]]></content>
      <categories>
        <category>CSS相关</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何使用em与rem]]></title>
    <url>%2F2018%2F09%2F07%2F%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8em%E4%B8%8Erem%2F</url>
    <content type="text"><![CDATA[如何使用em与rem前沿 你可能已经很熟练使用这两个灵活的单位，但你可能不完全了解何时使用 rem，何时使用em。em和rem都是很灵活，可扩展的单位，由浏览器转换为像数值(px)，具体取决于字体大小的设置。使用em和rem单位可以让我们的设计更加灵活，能够控制元素整体放大缩小，在我们在开发期间，能更加快速灵活的调整，允许浏览器用户调整浏览器字体大小来达到最佳体验。这么好用的东西，怎么会没有兼容性问题呢，请往下看~ 兼容性 相同与不同相同点 rem与em皆由font-size来决定的。 不同点 rem是根据html跟元素的font-size为基数确定的，字体大小可能首先来自浏览器设置（16px）；em是根据使用em单位的元素的字体大小决定的（注：由于字体具有继承性，所以有时会被误认为父元素font-size来决定的，实际不然）； 总结 rem 单位翻译为像素值是由 html 元素的字体大小决定的。 此字体大小会被浏览器中字体大小的设置影响，除非显式重写一个具体单位。 em 单位转为像素值，取决于他们使用的字体大小。 此字体大小受从父元素继承过来的字体大小，除非显式重写与一个具体单位。]]></content>
      <categories>
        <category>CSS相关</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
</search>
